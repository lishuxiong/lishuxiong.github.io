<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lisx</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2017-05-16T09:04:42.000Z</updated>
  <id>/</id>
  
  <author>
    <name>lisx</name>
    <email>lishuxiongmail@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ImageView的scaleType属性分析结果</title>
    <link href="/2017/05/16/ImageView%E7%9A%84scaleType%E5%B1%9E%E6%80%A7%E5%88%86%E6%9E%90%E7%BB%93%E6%9E%9C/"/>
    <id>/2017/05/16/ImageView的scaleType属性分析结果/</id>
    <published>2017-05-16T08:39:19.000Z</published>
    <updated>2017-05-16T09:04:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录Android中ImageView的scaleType的各个属性<br><a id="more"></a></p>
<p>在android中一般主要用ImageView来显示图片，那么关于图片的比例缩放，及显示图片的整体还是部分等等，我们可以使用scaleType来设置对应的显示模式。<br>使用方式：<br>（1）在xml布局文件中 android:scaleType=”center”；<br>（2）在代码中：imageView.setScaleType(ImageView.ScaleType.CENTER);</p>
<p>下面是几种结果实际测试对比结果：<br>首先是横图和竖图的原图：</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/ImageView.jpg" alt="image"></p>
<p>（1）ImageView.ScaleType.CENTER | android:scaleType=”center” </p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_center.jpg" alt="image"></p>
<p>以原图的几何中心点和ImagView的几何中心点为基准,按图片的原来size居中显示，不缩放；<br>当图片长/宽超过View的长/宽，则截取图片的居中部分显示ImageView的size；<br>当图片小于View 的长宽时，只显示图片的size,不放大。</p>
<font color="#FF0000" size="3" face="关键字：不缩放,截图">关键字：不缩放,截图</font>


<p>（2）ImageView.ScaleType.CENTER_CROP | android:scaleType=”centerCrop”</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_centerCrop.jpg" alt="image"></p>
<p>以原图的几何中心点和ImagView的几何中心点为基准，按比例扩大图片原图片的size居中显示；使得图片长 (宽)等于或大于View的长(宽),并按View的大小截取图片。<br>当原图的size大于ImageView时，按比例缩小原图片，使得原图的size大于等于ImageView的大小。</p>
<font color="#FF0000" size="3" face="关键字：按比例缩放，截图">关键字：按比例缩放，截图</font>


<p>（3）ImageView.ScaleType.CENTER_INSIDE | android:scaleType=”centerInside”</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_centerSide.jpg" alt="image"></p>
<p>以原图的几何中心点和ImagView的几何中心点为基准；<br>当原图片大于imageView的size时，缩小原图，使其小于等于imageView，将图片的内容完全居中显示。<br>当原图片小于imageView的size时，不放大原图，居中显示原图片。</p>
<font color="#FF0000" size="3" face="关键字：将图片的内容完整居中显示，不放大，只缩小">关键字：将图片的内容完整居中显示，不放大，只缩小</font>


<p>（4）ImageView.ScaleType.FIT_CENTER | android:scaleType=”fitCenter”</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_fitCenter.jpg" alt="image"></p>
<p>以原图的几何中心点和ImagView的几何中心点为基准；<br>原图片按比例扩大(缩小)到View的宽度（短的边），居中显示，显示全部图片。<br>通过按比例缩小(扩大)原图片来的size使得图片长(宽)等于或小于ImageView的长(宽)。</p>
<font color="#FF0000" size="3" face="关键字：按比例缩放，居中显示全图">关键字：按比例缩放，居中显示全图</font>



<p>（5）ImageView.ScaleType.FIT_END | android:scaleType=”fitEnd”    </p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_fitend.jpg" alt="image"></p>
<p>以原图的右下角和ImagView的右下角为基准；<br>原图片按比例扩大(缩小)到View的宽度，显示在ImageView的下部分靠右位置。</p>
<font color="#FF0000" size="3" face="关键字：按比例缩放，靠右显示全图">关键字：按比例缩放，靠右显示全图</font>


<p>（6）ImageView.ScaleType.FIT_START | android:scaleType=”fitStart”</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_fitStart.jpg" alt="image"></p>
<p>以原图的右下角和ImagView的右下角为基准；<br>原图片按比例扩大(缩小)到View的宽度，显示在ImageView的上部分靠左位置。</p>
<font color="#FF0000" size="3" face="关键字：按比例缩放，靠左显示全图">关键字：按比例缩放，靠左显示全图</font>


<p>（7）ImageView.ScaleType.FIT_XY | android:scaleType=”fitXY”</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_fitXY.jpg" alt="image"></p>
<p>原图片按照指定的大小在ImageView中显示，拉伸显示图片，不保持原比例，全部显示图片填满ImageView；</p>
<font color="#FF0000" size="3" face="关键字：不保持比例，拉伸显示全图，填满ImageView">关键字：不保持比例，拉伸显示全图，填满ImageView。</font>


<p>（8）ImageView.ScaleType.MATRIX | android:scaleType=”matrix”</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/imageview_matirx.jpg" alt="image"></p>
<p>原图片按照指定的大小在ImageView中显示，不扩大（缩小），截取原图的上部分靠左位置<br>直接绘制在ImagView上显示；</p>
<font color="#FF0000" size="3" face="关键字：不扩大缩小，截图（原图上部分靠左位置）">关键字：不扩大缩小，截图（原图上部分靠左位置）。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录Android中ImageView的scaleType的各个属性&lt;br&gt;
    
    </summary>
    
    
      <category term="Android ImageView scaleType" scheme="/tags/Android-ImageView-scaleType/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio及异常问题记录</title>
    <link href="/2017/05/15/AndroidStudio%E5%8F%8A%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>/2017/05/15/AndroidStudio及异常问题记录/</id>
    <published>2017-05-15T09:16:58.000Z</published>
    <updated>2017-05-16T01:56:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录AndroidStudio使用中问题和开发中异常…<br><a id="more"></a></p>
<p>1 首次启动studio卡死解决：到android studio的安装目录的bin目录下去找这个文件：idea.properties 文件，在文件的最后追加这样一句话即可：disable.android.first.run=true</p>
<p>2 导入其他地方的项目卡死（很慢） 从github或其他地方导入项目如果studio很久也是像卡死的状态，这时你可以先将进程杀死，沿着这个路径：项目/gradle/wrapper找到这个文件：gradle-wrapper.properties 查看gradle的版本号。</p>
<p>解决：（1）去</p>
<p><a href="http://services.gradle.org/distributions" target="_blank" rel="external">http://services.gradle.org/distributions</a></p>
<p>下载对应版本然后将下载好的这个文件（比如：gradle-2.10-all.zip）拷贝到这个目录下：</p>
<blockquote>
<p>C:\Users\用户名.gradle\wrapper\dists\gradle-2.10all\a4w5fzrkeut1ox71xslb49gst</p>
</blockquote>
<p>注：a4w5fzrkeut1ox71xslb49gst这个文件夹名是随机数所以很可能不是一样的，然后再导入项目。</p>
<p>（2）另一种方法是，将上面那个文件的版本改成你自己那个目录有的版本，然后再导入项目</p>
<p>具体参见链接地址：</p>
<p><a href="http://www.jianshu.com/p/e1c0b46e317c" target="_blank" rel="external">http://www.jianshu.com/p/e1c0b46e317c</a></p>
<p>3 加快android studio的运行速度：进入AS安装目录bin下面，找到studio64.exe.vmoptions文件，进入从上到下第二个开始一次修改为，1500m,500m，96m之后重新打开AS即可。</p>
<p>4 在android studio中指定（替换）keystore签名文件首先在build下点击genereta singled APK,之后完善对应信息并且最后选择debug在finsh。（clean一下）之后在使用项目的build gradle文件中android{}下面配置如下片段例如：</p>
<p>signingConfigs {</p>
<pre><code>config {
keyAlias &apos;123&apos;
keyPassword &apos;123&apos;
storeFile file(&apos;签名文件路径&apos;)
storePassword &apos;123&apos;
}
</code></pre><p>}</p>
<p>最后clean一下项目，运行即可</p>
<p>5 adnroid studio下ndk使用<br>  1 下载ndk<br>  2 配置ndk环境变量<br>  3 在cmd中进入到对应到libs库下面 的so库文件目录，之后执行ndk-buil重新编译。</p>
<p>6 dexDebug ExecException finished with non-zero exit value 2 异常<br>  需要在gradle中配置下面的代码，原因是引用了多个libraries文件</p>
<p>defaultConfig {</p>
<pre><code>multiDexEnabled true
</code></pre><p>}</p>
<p>7 Execution failed for task ‘:app:transformClassesWithJarMergingForDebug’.</p>
<blockquote>
<p>com.android.build.api.transform.ransformException:java.util.zip.ZipException:duplicate entry:android/support/v4/app/BackStackState$1.class</p>
</blockquote>
<p> 原因：在所添加的jar包或aar包中也引用了support-V4,与工程中引用的相冲突<br>Ctrl+N –&gt; 在搜索框中输入BackStackState –&gt; 查找到所有引用该类的类，这些类即为引起冲突的类<br>去掉本工程中gradle中用于引用有冲突的包的代码或者将冲突的代码从jar包或aar包中移除，确保一个module中只引用了一份相同的第三方包 </p>
<p>8 Could not find property” error. signingConfigs(配置打包签名的时候，提示找不到这个属性签名文件)</p>
<p>解决：在gradle的文件中把signingConfigs的配置放在buildTypes类型的代码上面 （gradle 按照顺序执行）</p>
<p>9 解决Android Studio编译后安装apk报错：The APK file does not exist on disk<br>  解决：打开当前的工程，在最右侧的gradle中重新build一下，在编译安装</p>
<p>10 android wifi连接adb<br> cmd中执行 adb tcpip 5555<br> 之后执行 adb connect (手机wifi地址，wifi搞基设置中查看)：5555  </p>
<p>11 android studio中clean或者build出现如下异常</p>
<p><img src="http://opdge5lf7.bkt.clouddn.com/1.png" alt="image"> </p>
<p>出现原因：因为当前项目下对应的 .gradle中的编译缓存文件损坏，<br>导致每次编译读取缓存中的属性，最终每次出错。</p>
<p>解决办法：进入当前项目下，找到.gradle文件，在当前gradle版本文件夹下面找到taskArtifacts文件夹<br>整个删除，重新clean生成，就ok。</p>
<p>删除位置：<img src="http://opdge5lf7.bkt.clouddn.com/2.png" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录AndroidStudio使用中问题和开发中异常…&lt;br&gt;
    
    </summary>
    
    
      <category term="AS AndroidStudio" scheme="/tags/AS-AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>自定义CircleGroup</title>
    <link href="/2017/04/26/%E8%87%AA%E5%AE%9A%E4%B9%89CircleGroup/"/>
    <id>/2017/04/26/自定义CircleGroup/</id>
    <published>2017-04-26T10:42:07.000Z</published>
    <updated>2017-05-17T02:07:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>一个自定义CircleGroup<br><a id="more"></a></p>
<p>github地址: <a href="https://github.com/lishuxiong/CircleGroup" target="_blank" rel="external">https://github.com/lishuxiong/CircleGroup</a></p>
<p>效果图：<br><img src="http://opdge5lf7.bkt.clouddn.com/circle.gif" alt="image">  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一个自定义CircleGroup&lt;br&gt;
    
    </summary>
    
    
      <category term="Android View" scheme="/tags/Android-View/"/>
    
  </entry>
  
</feed>
